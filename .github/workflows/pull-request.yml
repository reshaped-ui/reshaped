name: "pr"
on:
  pull_request:
    branches:
      - main
      - canary

jobs:
  setup:
    name: Dependencies setup
    runs-on: ubuntu-latest
    outputs:
      node_modules_cache: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  setup-playwright:
    name: Playwright setup
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      playwright_cache: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Restore node_modules cache
        uses: actions/cache@v4
        id: node_modules_cache
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            /home/runner/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - run: pnpm playwright install

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Restore node_modules cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Lint CSS and JS code
        run: pnpm lint

  lint-pr-title:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        with:
          subjectPattern: '^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)\/.+'

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Restore node_modules cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Build the project
        run: pnpm build

  test-browser:
    runs-on: ubuntu-latest
    needs: [setup, setup-playwright]
    strategy:
      fail-fast: false
      matrix:
        shard: [1/4, 2/4, 3/4, 4/4]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Restore playwright cache
        uses: actions/cache@v4
        with:
          path: |
            /home/runner/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Run tests
        run: pnpm test:browser --shard ${{ matrix.shard }}

  test-unit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Run tests
        run: pnpm test:unit

  test-size:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Test bundle size
        uses: andresz1/size-limit-action@v1.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          package_manager: pnpm
          build_script: build
          clean_script: clean
          skip_step: install
