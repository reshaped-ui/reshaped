import {
  require_array_iteration
} from "./chunk-XVLZZE2S.js";
import {
  require_task
} from "./chunk-W2M4M4M6.js";
import {
  require_dist
} from "./chunk-NHSKU6E5.js";
import {
  require_browser
} from "./chunk-TN6ST2RV.js";
import {
  require_regexp_flags
} from "./chunk-4FLQF7IL.js";
import {
  require_array_method_has_species_support,
  require_create_property,
  require_dom_iterables,
  require_freezing,
  require_internal_metadata,
  require_is_array,
  require_object_keys,
  require_to_object
} from "./chunk-U6VEKS2Y.js";
import {
  init_es_object_to_string,
  require_an_object,
  require_create_non_enumerable_property,
  require_export,
  require_fails,
  require_global,
  require_is_object,
  require_redefine,
  require_to_absolute_index,
  require_to_indexed_object,
  require_to_length,
  require_well_known_symbol
} from "./chunk-WW24V2L5.js";
import {
  __commonJS,
  __esm,
  __toESM
} from "./chunk-ACCAMVX6.js";

// ../../node_modules/core-js/modules/es.object.freeze.js
var $, FREEZING, fails, isObject, onFreeze, nativeFreeze, FAILS_ON_PRIMITIVES;
var init_es_object_freeze = __esm({
  "../../node_modules/core-js/modules/es.object.freeze.js"() {
    $ = require_export();
    FREEZING = require_freezing();
    fails = require_fails();
    isObject = require_is_object();
    onFreeze = require_internal_metadata().onFreeze;
    nativeFreeze = Object.freeze;
    FAILS_ON_PRIMITIVES = fails(function() {
      nativeFreeze(1);
    });
    $({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
      freeze: function freeze(it) {
        return nativeFreeze && isObject(it) ? nativeFreeze(onFreeze(it)) : it;
      }
    });
  }
});

// ../../node_modules/core-js/modules/es.array.slice.js
var $2, isObject2, isArray, toAbsoluteIndex, toLength, toIndexedObject, createProperty, wellKnownSymbol, arrayMethodHasSpeciesSupport, HAS_SPECIES_SUPPORT, SPECIES, nativeSlice, max;
var init_es_array_slice = __esm({
  "../../node_modules/core-js/modules/es.array.slice.js"() {
    "use strict";
    $2 = require_export();
    isObject2 = require_is_object();
    isArray = require_is_array();
    toAbsoluteIndex = require_to_absolute_index();
    toLength = require_to_length();
    toIndexedObject = require_to_indexed_object();
    createProperty = require_create_property();
    wellKnownSymbol = require_well_known_symbol();
    arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
    HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("slice");
    SPECIES = wellKnownSymbol("species");
    nativeSlice = [].slice;
    max = Math.max;
    $2({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
      slice: function slice(start, end) {
        var O = toIndexedObject(this);
        var length = toLength(O.length);
        var k = toAbsoluteIndex(start, length);
        var fin = toAbsoluteIndex(end === void 0 ? length : end, length);
        var Constructor, result, n;
        if (isArray(O)) {
          Constructor = O.constructor;
          if (typeof Constructor == "function" && (Constructor === Array || isArray(Constructor.prototype))) {
            Constructor = void 0;
          } else if (isObject2(Constructor)) {
            Constructor = Constructor[SPECIES];
            if (Constructor === null)
              Constructor = void 0;
          }
          if (Constructor === Array || Constructor === void 0) {
            return nativeSlice.call(O, k, fin);
          }
        }
        result = new (Constructor === void 0 ? Array : Constructor)(max(fin - k, 0));
        for (n = 0; k < fin; k++, n++)
          if (k in O)
            createProperty(result, n, O[k]);
        result.length = n;
        return result;
      }
    });
  }
});

// ../../node_modules/core-js/modules/es.regexp.to-string.js
var redefine, anObject, fails2, flags, TO_STRING, RegExpPrototype, nativeToString, NOT_GENERIC, INCORRECT_NAME;
var init_es_regexp_to_string = __esm({
  "../../node_modules/core-js/modules/es.regexp.to-string.js"() {
    "use strict";
    redefine = require_redefine();
    anObject = require_an_object();
    fails2 = require_fails();
    flags = require_regexp_flags();
    TO_STRING = "toString";
    RegExpPrototype = RegExp.prototype;
    nativeToString = RegExpPrototype[TO_STRING];
    NOT_GENERIC = fails2(function() {
      return nativeToString.call({ source: "a", flags: "b" }) != "/a/b";
    });
    INCORRECT_NAME = nativeToString.name != TO_STRING;
    if (NOT_GENERIC || INCORRECT_NAME) {
      redefine(RegExp.prototype, TO_STRING, function toString() {
        var R = anObject(this);
        var p = String(R.source);
        var rf = R.flags;
        var f = String(rf === void 0 && R instanceof RegExp && !("flags" in RegExpPrototype) ? flags.call(R) : rf);
        return "/" + p + "/" + f;
      }, { unsafe: true });
    }
  }
});

// ../../node_modules/core-js/modules/web.immediate.js
var $3, global, task, FORCED;
var init_web_immediate = __esm({
  "../../node_modules/core-js/modules/web.immediate.js"() {
    $3 = require_export();
    global = require_global();
    task = require_task();
    FORCED = !global.setImmediate || !global.clearImmediate;
    $3({ global: true, bind: true, enumerable: true, forced: FORCED }, {
      setImmediate: task.set,
      clearImmediate: task.clear
    });
  }
});

// ../../node_modules/core-js/modules/es.object.keys.js
var $4, toObject, nativeKeys, fails3, FAILS_ON_PRIMITIVES2;
var init_es_object_keys = __esm({
  "../../node_modules/core-js/modules/es.object.keys.js"() {
    $4 = require_export();
    toObject = require_to_object();
    nativeKeys = require_object_keys();
    fails3 = require_fails();
    FAILS_ON_PRIMITIVES2 = fails3(function() {
      nativeKeys(1);
    });
    $4({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES2 }, {
      keys: function keys(it) {
        return nativeKeys(toObject(it));
      }
    });
  }
});

// ../../node_modules/core-js/modules/es.array.filter.js
var $5, $filter, arrayMethodHasSpeciesSupport2, HAS_SPECIES_SUPPORT2;
var init_es_array_filter = __esm({
  "../../node_modules/core-js/modules/es.array.filter.js"() {
    "use strict";
    $5 = require_export();
    $filter = require_array_iteration().filter;
    arrayMethodHasSpeciesSupport2 = require_array_method_has_species_support();
    HAS_SPECIES_SUPPORT2 = arrayMethodHasSpeciesSupport2("filter");
    $5({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT2 }, {
      filter: function filter(callbackfn) {
        return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
      }
    });
  }
});

// ../../node_modules/core-js/internals/array-method-is-strict.js
var require_array_method_is_strict = __commonJS({
  "../../node_modules/core-js/internals/array-method-is-strict.js"(exports, module) {
    "use strict";
    var fails4 = require_fails();
    module.exports = function(METHOD_NAME, argument) {
      var method = [][METHOD_NAME];
      return !!method && fails4(function() {
        method.call(null, argument || function() {
          throw 1;
        }, 1);
      });
    };
  }
});

// ../../node_modules/core-js/internals/array-for-each.js
var require_array_for_each = __commonJS({
  "../../node_modules/core-js/internals/array-for-each.js"(exports, module) {
    "use strict";
    var $forEach = require_array_iteration().forEach;
    var arrayMethodIsStrict = require_array_method_is_strict();
    var STRICT_METHOD = arrayMethodIsStrict("forEach");
    module.exports = !STRICT_METHOD ? function forEach2(callbackfn) {
      return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
    } : [].forEach;
  }
});

// ../../node_modules/core-js/modules/web.dom-collections.for-each.js
var global2, DOMIterables, forEach, createNonEnumerableProperty, Collection, CollectionPrototype, COLLECTION_NAME;
var init_web_dom_collections_for_each = __esm({
  "../../node_modules/core-js/modules/web.dom-collections.for-each.js"() {
    global2 = require_global();
    DOMIterables = require_dom_iterables();
    forEach = require_array_for_each();
    createNonEnumerableProperty = require_create_non_enumerable_property();
    for (COLLECTION_NAME in DOMIterables) {
      Collection = global2[COLLECTION_NAME];
      CollectionPrototype = Collection && Collection.prototype;
      if (CollectionPrototype && CollectionPrototype.forEach !== forEach)
        try {
          createNonEnumerableProperty(CollectionPrototype, "forEach", forEach);
        } catch (error) {
          CollectionPrototype.forEach = forEach;
        }
    }
  }
});

// ../../node_modules/@storybook/channels/dist/esm/index.js
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var import_util_deprecate, import_ts_dedent, _templateObject, generateRandomId, Channel, esm_default;
var init_esm = __esm({
  "../../node_modules/@storybook/channels/dist/esm/index.js"() {
    init_es_object_freeze();
    init_es_array_slice();
    init_es_object_to_string();
    init_es_regexp_to_string();
    init_web_immediate();
    init_es_object_keys();
    init_es_array_filter();
    init_web_dom_collections_for_each();
    import_util_deprecate = __toESM(require_browser());
    import_ts_dedent = __toESM(require_dist());
    generateRandomId = function generateRandomId2() {
      return Math.random().toString(16).slice(2);
    };
    Channel = function() {
      function Channel2() {
        var _this = this;
        var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, transport = _ref.transport, _ref$async = _ref.async, async = _ref$async === void 0 ? false : _ref$async;
        _classCallCheck(this, Channel2);
        this.isAsync = void 0;
        this.sender = generateRandomId();
        this.events = {};
        this.data = {};
        this.transport = void 0;
        this.addPeerListener = (0, import_util_deprecate.default)(function(eventName, listener) {
          _this.addListener(eventName, listener);
        }, (0, import_ts_dedent.default)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      channel.addPeerListener is deprecated\n    "]))));
        this.isAsync = async;
        if (transport) {
          this.transport = transport;
          this.transport.setHandler(function(event) {
            return _this.handleEvent(event);
          });
        }
      }
      _createClass(Channel2, [{
        key: "hasTransport",
        get: function get() {
          return !!this.transport;
        }
      }, {
        key: "addListener",
        value: function addListener(eventName, listener) {
          this.events[eventName] = this.events[eventName] || [];
          this.events[eventName].push(listener);
        }
      }, {
        key: "emit",
        value: function emit(eventName) {
          var _this2 = this;
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          var event = {
            type: eventName,
            args,
            from: this.sender
          };
          var options = {};
          if (args.length >= 1 && args[0] && args[0].options) {
            options = args[0].options;
          }
          var handler = function handler2() {
            if (_this2.transport) {
              _this2.transport.send(event, options);
            }
            _this2.handleEvent(event);
          };
          if (this.isAsync) {
            setImmediate(handler);
          } else {
            handler();
          }
        }
      }, {
        key: "last",
        value: function last(eventName) {
          return this.data[eventName];
        }
      }, {
        key: "eventNames",
        value: function eventNames() {
          return Object.keys(this.events);
        }
      }, {
        key: "listenerCount",
        value: function listenerCount(eventName) {
          var listeners = this.listeners(eventName);
          return listeners ? listeners.length : 0;
        }
      }, {
        key: "listeners",
        value: function listeners(eventName) {
          var listeners2 = this.events[eventName];
          return listeners2 || void 0;
        }
      }, {
        key: "once",
        value: function once(eventName, listener) {
          var onceListener = this.onceListener(eventName, listener);
          this.addListener(eventName, onceListener);
        }
      }, {
        key: "removeAllListeners",
        value: function removeAllListeners(eventName) {
          if (!eventName) {
            this.events = {};
          } else if (this.events[eventName]) {
            delete this.events[eventName];
          }
        }
      }, {
        key: "removeListener",
        value: function removeListener(eventName, listener) {
          var listeners = this.listeners(eventName);
          if (listeners) {
            this.events[eventName] = listeners.filter(function(l) {
              return l !== listener;
            });
          }
        }
      }, {
        key: "on",
        value: function on(eventName, listener) {
          this.addListener(eventName, listener);
        }
      }, {
        key: "off",
        value: function off(eventName, listener) {
          this.removeListener(eventName, listener);
        }
      }, {
        key: "handleEvent",
        value: function handleEvent(event) {
          var listeners = this.listeners(event.type);
          if (listeners && listeners.length) {
            listeners.forEach(function(fn) {
              fn.apply(event, event.args);
            });
          }
          this.data[event.type] = event.args;
        }
      }, {
        key: "onceListener",
        value: function onceListener(eventName, listener) {
          var _this3 = this;
          var onceListener2 = function onceListener3() {
            _this3.removeListener(eventName, onceListener3);
            return listener.apply(void 0, arguments);
          };
          return onceListener2;
        }
      }]);
      return Channel2;
    }();
    esm_default = Channel;
  }
});

export {
  require_array_method_is_strict,
  init_web_dom_collections_for_each,
  init_es_object_freeze,
  init_es_array_slice,
  init_es_regexp_to_string,
  init_es_object_keys,
  init_es_array_filter,
  Channel,
  esm_default,
  init_esm
};
//# sourceMappingURL=chunk-3HFPERYK.js.map
