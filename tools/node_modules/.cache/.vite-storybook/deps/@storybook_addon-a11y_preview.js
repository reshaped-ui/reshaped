import {
  require_preview_api
} from "./chunk-AYLXFGUN.js";
import {
  scope
} from "./chunk-ERP44XEQ.js";
import {
  __toESM
} from "./chunk-LFBQMW2U.js";

// ../../node_modules/@storybook/addon-a11y/dist/chunk-RCNGGLPU.mjs
var ADDON_ID = "storybook/a11y";
var PANEL_ID = `${ADDON_ID}/panel`;
var RESULT = `${ADDON_ID}/result`;
var REQUEST = `${ADDON_ID}/request`;
var RUNNING = `${ADDON_ID}/running`;
var ERROR = `${ADDON_ID}/error`;
var MANUAL = `${ADDON_ID}/manual`;
var EVENTS = { RESULT, REQUEST, RUNNING, ERROR, MANUAL };

// ../../node_modules/@storybook/addon-a11y/dist/preview.mjs
var import_preview_api = __toESM(require_preview_api(), 1);
var { document, window: globalWindow } = scope;
var channel = import_preview_api.addons.getChannel();
var active = false;
var activeStoryId;
var handleRequest = async (storyId) => {
  let { manual } = await getParams(storyId);
  manual || await run(storyId);
};
var run = async (storyId) => {
  activeStoryId = storyId;
  try {
    let input = await getParams(storyId);
    if (!active) {
      active = true, channel.emit(EVENTS.RUNNING);
      let axe = (await import("./axe-MY5WLNJE.js")).default, { element = "#storybook-root", config, options = {} } = input, htmlElement = document.querySelector(element);
      if (!htmlElement)
        return;
      axe.reset(), config && axe.configure(config);
      let result = await axe.run(htmlElement, options);
      activeStoryId === storyId ? channel.emit(EVENTS.RESULT, result) : (active = false, run(activeStoryId));
    }
  } catch (error) {
    channel.emit(EVENTS.ERROR, error);
  } finally {
    active = false;
  }
};
var getParams = async (storyId) => {
  let { parameters } = await globalWindow.__STORYBOOK_STORY_STORE__.loadStory({ storyId }) || {};
  return parameters.a11y || { config: {}, options: {} };
};
channel.on(EVENTS.REQUEST, handleRequest);
channel.on(EVENTS.MANUAL, run);
//# sourceMappingURL=@storybook_addon-a11y_preview.js.map
