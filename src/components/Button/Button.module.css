.root {
	/* Using --rs-button-p and --rs-p to dynamically reasign --rs-p for all sizes of ghost buttns */
	--rs-p-v: var(--rs-button-p-v);
	--rs-p-h: var(--rs-button-p-h);

	transition: var(--rs-duration-fast) var(--rs-easing-standard);
	transition-property: background-color, box-shadow, border-color, color, transform;
	padding: calc(var(--rs-unit-x1) - var(--rs-button-border-width))
		calc(var(--rs-p-h) - var(--rs-button-border-width));
	border-radius: var(--rs-button-radius);
	cursor: pointer;
	position: relative;
	z-index: 0;
	box-sizing: border-box;
	text-align: initial;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	text-decoration: none;
	overflow: hidden;
	border: var(--rs-button-border-width) solid transparent;
	-webkit-tap-highlight-color: transparent;
	font-family: var(--rs-font-family-body);
	font-weight: var(--rs-font-weight-medium);
	font-size: var(--rs-button-font-size);
	line-height: var(--rs-button-line-height);
	min-height: calc(var(--rs-button-line-height) + var(--rs-p-v) * 2);
	min-width: calc(
		var(--rs-button-line-height) - (var(--rs-unit-x1) * 2) + (var(--rs-button-p-h) * 2)
	);

	&:active {
		transform: scale(0.98);
	}

	&::before {
		content: "";
		position: absolute;
		inset: 0;
		transition: var(--rs-duration-fast) var(--rs-easing-standard);
		transition-property: opacity;
		opacity: 0;
	}
}

.text {
	display: flex;
	align-items: center;
	gap: var(--rs-button-gap);
}

.icon {
	/* Starts with 1x and then grows based on the padding size */
	margin-inline-end: var(--rs-button-gap);

	&.--icon-position-end {
		margin-inline-end: 0;
		margin-inline-start: var(--rs-button-gap);
	}

	/* Icon only */
	&:last-child {
		margin-inline-end: 0;
	}
}

.text,
.icon {
	position: relative;
	z-index: 5;
}

.loader {
	position: absolute;
	inset: 0;
	display: none;
	align-items: center;
	justify-content: center;
}

.root.--icon-only {
	& .icon {
		margin: 0 calc(var(--rs-unit-x1) * -1);
	}
}

.root.--loading {
	cursor: default;

	&:active {
		transform: none;
	}

	& .text,
	& .icon {
		visibility: hidden;
	}

	& .loader {
		display: flex;
	}
}

.root.--rounded {
	border-radius: 999px;
}

@responsive .--size {
	@value small {
		--rs-button-p-v: var(--rs-unit-x1);
		--rs-button-p-h: var(--rs-unit-x2);
		--rs-button-gap: var(--rs-unit-x1);
		--rs-button-line-height: var(--rs-line-height-body-3);
		--rs-button-font-size: var(--rs-font-size-body-3);
		--rs-button-radius: var(--rs-radius-small);
	}

	@value medium {
		--rs-button-p-v: var(--rs-unit-x2);
		--rs-button-p-h: var(--rs-unit-x3);
		--rs-button-gap: var(--rs-unit-x2);
		--rs-button-line-height: var(--rs-line-height-body-3);
		--rs-button-font-size: var(--rs-font-size-body-3);
		--rs-button-radius: var(--rs-radius-small);
	}

	@value large {
		--rs-button-p-v: var(--rs-unit-x3);
		--rs-button-p-h: var(--rs-unit-x4);
		--rs-button-gap: var(--rs-unit-x2);
		--rs-button-line-height: var(--rs-line-height-body-2);
		--rs-button-font-size: var(--rs-font-size-body-2);
		--rs-button-radius: var(--rs-radius-medium);
	}

	@value xlarge {
		--rs-button-p-v: var(--rs-unit-x4);
		--rs-button-p-h: var(--rs-unit-x5);
		--rs-button-gap: var(--rs-unit-x3);
		--rs-button-line-height: var(--rs-line-height-body-2);
		--rs-button-font-size: var(--rs-font-size-body-2);
		--rs-button-radius: var(--rs-radius-medium);
	}
}

@responsive .--full-width {
	@value true {
		width: 100%;
		text-align: center;
	}

	@value false {
		width: auto;
		text-align: initial;
	}
}

.root.--variant-solid.--color-neutral,
.root.--variant-faded.--color-neutral {
	background-color: var(--rs-color-background-neutral);
	color: var(--rs-color-on-background-neutral);

	&::before {
		background-color: var(--rs-color-on-background-neutral);
	}

	&:hover:not(.--loading)::before,
	&.--highlighted::before {
		opacity: 0.04;
	}
}

.root.--variant-solid {
	--rs-button-border-width: 0px;

	@each $color in primary, critical, positive {
		&.--color-$(color) {
			background-color: var(--rs-color-background-$(color));
			color: var(--rs-color-on-background-$(color));

			&::before {
				background-color: var(--rs-color-on-background-$(color));
			}

			&:hover:not(.--loading)::before,
			&.--highlighted::before {
				opacity: 0.08;
			}
		}
	}

	&.--color-media {
		background-color: var(--rs-color-white);
		color: var(--rs-color-black);

		&::before {
			background-color: var(--rs-color-black);
		}

		&:hover:not(.--loading, .--disabled)::before,
		&.--highlighted::before {
			opacity: 0.04;
		}
	}
}

.root.--variant-faded {
	--rs-button-border-width: 0px;

	@each $color in primary, critical, positive {
		&.--color-$(color) {
			background-color: var(--rs-color-background-$(color)-faded);
			color: var(--rs-color-foreground-$(color));

			&::before {
				background-color: var(--rs-color-foreground-$(color));
			}

			&:hover:not(.--loading)::before,
			&.--highlighted::before {
				opacity: 0.04;
			}
		}
	}

	&.--color-media {
		color: var(--rs-color-white);

		&::before {
			background-color: var(--rs-color-black);
			opacity: 0.28;
		}

		&:hover:not(.--loading, .--disabled)::before,
		&.--highlighted::before {
			opacity: 0.32;
		}
	}

	&.--color-inherit {
		color: inherit;

		&::before {
			background-color: currentcolor;
			opacity: 0.16;
		}

		&:hover:not(.--loading)::before,
		&.--highlighted::before {
			opacity: 0.2;
		}
	}
}

.root.--variant-outline {
	--rs-button-border-width: 1px;

	&.--color-neutral {
		color: var(--rs-color-foreground-neutral);
		border-color: var(--rs-color-border-neutral);

		&::before {
			background-color: var(--rs-color-foreground-neutral);
		}

		&:hover:not(.--loading)::before,
		&.--highlighted::before {
			opacity: 0.04;
		}
	}

	@each $color in primary, critical, positive {
		&.--color-$(color) {
			color: var(--rs-color-foreground-$(color));
			border-color: var(--rs-color-border-$(color));

			&::before {
				background-color: var(--rs-color-foreground-$(color));
			}

			&:hover:not(.--loading)::before,
			&.--highlighted::before {
				opacity: 0.08;
			}
		}
	}

	&.--color-inherit {
		color: inherit;
		border-color: currentcolor;

		&::before {
			background-color: currentcolor;
		}

		&:hover:not(.--loading)::before,
		&.--highlighted::before {
			opacity: 0.08;
		}
	}
}

.root.--variant-ghost {
	--rs-button-border-width: 0px;
	--rs-p-h: max(calc(var(--rs-button-p-h) - var(--rs-unit-x1)), var(--rs-unit-x2));

	&.--color-neutral {
		color: var(--rs-color-foreground-neutral);

		&::before {
			background-color: var(--rs-color-background-neutral);
		}

		&:hover:not(.--loading)::before,
		&.--highlighted::before {
			opacity: 0.32;
		}
	}

	@each $color in primary, critical, positive {
		&.--color-$(color) {
			color: var(--rs-color-foreground-$(color));

			&::before {
				background-color: var(--rs-color-background-$(color));
			}

			&:hover:not(.--loading)::before,
			&.--highlighted::before {
				opacity: 0.12;
			}
		}
	}

	&.--color-inherit {
		color: inherit;

		&::before {
			background-color: currentcolor;
		}

		&:hover:not(.--loading)::before,
		&.--highlighted::before {
			opacity: 0.08;
		}
	}
}

.root.--elevated {
	&:not(:focus-visible) {
		box-shadow: var(--rs-shadow-raised);
	}

	&.--variant-outline {
		&.--color-neutral,
		&.--color-primary,
		&.--color-critical,
		&.--color-positive {
			background: var(--rs-color-background-elevation-raised);
		}
	}
}

.root.--disabled {
	&:active {
		transform: none !important;
	}

	&.--color-neutral,
	&.--color-primary,
	&.--color-positive,
	&.--color-critical,
	&.--color-inherit {
		&,
		&:hover,
		&.--highlighted {
			color: var(--rs-color-foreground-disabled) !important;
			border-color: var(--rs-color-border-disabled) !important;
			background-color: var(--rs-color-background-disabled) !important;

			&::before {
				opacity: 0 !important;
			}

			&.--variant-faded {
				background-color: var(--rs-color-background-disabled-faded) !important;
			}

			&.--variant-outline {
				background-color: transparent !important;
			}

			&.--variant-ghost {
				background-color: transparent !important;
				border-color: transparent !important;
			}
		}
	}

	&.--color-media {
		&,
		&:hover,
		&.--highlighted {
			opacity: 0.4 !important;
		}
	}
}

/* Button group */

.group .root {
	border-radius: 0;

	&:first-child {
		border-start-start-radius: var(--rs-button-radius);
		border-end-start-radius: var(--rs-button-radius);
	}

	&:not(:first-child) {
		border-inline-start: 1px solid var(--rs-button-group-separator-color);
	}

	&:last-child {
		border-start-end-radius: var(--rs-button-radius);
		border-end-end-radius: var(--rs-button-radius);
	}

	@each $color in neutral, positive, critical, primary {
		&.--variant-solid.--color-$(color) {
			--rs-button-group-separator-color: var(--rs-color-border-$(color));
		}

		&.--variant-ghost.--color-$(color) {
			--rs-button-group-separator-color: var(--rs-color-border-$(color)-faded);
		}
	}

	@each $color in positive, critical, primary {
		&.--variant-faded.--color-$(color) {
			--rs-button-group-separator-color: var(--rs-color-border-$(color)-faded);
		}
	}

	&.--variant-solid.--color-black {
		--rs-button-group-separator-color: rgba(var(--rs-color-rgb-white), 0.28);
	}

	&.--variant-faded.--color-black {
		--rs-button-group-separator-color: rgba(var(--rs-color-rgb-white), 0.14);
	}

	&.--variant-ghost.--color-black {
		--rs-button-group-separator-color: rgba(var(--rs-color-rgb-black), 0.2);
	}

	&.--variant-solid.--color-white {
		--rs-button-group-separator-color: rgba(var(--rs-color-rgb-black), 0.2);
	}

	&.--variant-faded.--color-white {
		--rs-button-group-separator-color: rgba(var(--rs-color-rgb-black), 0.2);
	}

	&.--variant-ghost.--color-white {
		--rs-button-group-separator-color: rgba(var(--rs-color-rgb-white), 0.28);
	}
}

/* Button aligner */

/* Prevent buttons inside the aligned from adding parent line-height */
.aligner {
	line-height: 0;
}
