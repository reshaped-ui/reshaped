.root {
	/* Minus border size */
	--rs-text-field-padding-v: calc(var(--rs-text-field-padding-base) - 1px);
	--rs-text-field-padding-h: calc(var(--rs-text-field-padding-base) - 1px + var(--rs-unit-x1));

	display: flex;
	position: relative;
	z-index: 0;
	background: var(--rs-color-background-elevation-base);
	border: 1px solid var(--rs-color-border-neutral);
	padding: var(--rs-text-field-padding-v) var(--rs-text-field-padding-h);
	overflow: hidden;

	&:focus-within {
		box-shadow: 0 0 0 1px var(--rs-color-border-primary);
		border-color: var(--rs-color-border-primary);
	}
}

.input {
	border: none;
	outline: none;
	position: relative;
	z-index: 1;
	background: none;
	flex-grow: 1;
	box-sizing: border-box;
	color: var(--rs-color-foreground-neutral);
	width: 100%;
	margin: calc(var(--rs-text-field-padding-v) * -1) -50%;
	padding: calc(var(--rs-text-field-padding-v)) 50% !important;
	font-weight: var(--rs-font-weight-regular);
	font-family: var(--rs-font-family-body);
}

.input:-webkit-autofill {
  -webkit-background-clip: text;
  -webkit-text-fill-color: var(--rs-color-foreground-neutral);
}

.slot,
.icon {
	position: relative;
	z-index: 5;
	display: flex;
	align-items: center;
	flex-shrink: 0;

	&:first-child {
		padding-inline-end: var(--rs-unit-x2);
	}

	&:last-child {
		padding-inline-start: var(--rs-unit-x2);
	}
}

.icon {
	pointer-events: none;
}

/* If there is an html element inside the slot container â€“ align vertical and horizontal input padding */
.slot:last-child > * {
	margin-inline-end: calc(var(--rs-unit-x1) * -1);
}

.slot:first-child > * {
	margin-inline-start: calc(var(--rs-unit-x1) * -1);
}

.root.--disabled {
	border-color: var(--rs-color-border-disabled);
	background: var(--rs-color-background-disabled-faded);
	cursor: not-allowed;

	&,
	& .input {
		color: var(--rs-color-foreground-disabled);
	}
}

@responsive .--size {
	@value medium {
		--rs-text-field-padding-base: var(--rs-unit-x1);

		border-radius: var(--rs-unit-radius-small);
		min-height: var(--rs-unit-x9);

		& .input {
			font-size: var(--rs-font-size-body-3);
			line-height: var(--rs-line-height-body-3);
		}
	}

	@value large {
		--rs-text-field-padding-base: var(--rs-unit-x2);

		border-radius: var(--rs-unit-radius-medium);
		min-height: calc(var(--rs-unit-x1) * 12);
	
		& .input {
			font-size: var(--rs-font-size-body-3);
			line-height: var(--rs-line-height-body-3);
		}
	}

	@value xlarge {
		--rs-text-field-padding-base: var(--rs-unit-x3);

		border-radius: var(--rs-unit-radius-medium);
		min-height: calc(var(--rs-unit-x1) * 14);

		& .input {
			font-size: var(--rs-font-size-body-2);
			line-height: var(--rs-line-height-body-2);
		}
	}
}

.root.--variant-faded {
	background: var(--rs-color-background-neutral-faded);
	border-color: transparent;

	&:focus-within {
		border-color: var(--rs-color-border-primary);
	}
}

.root.--variant-headless {
	background: transparent;
	border-color: transparent;
	--rs-text-field-padding-h: 0;

	&:focus-within,
	&.--status-error,
	&.--status-error:focus-within {
		border-color: transparent;
		box-shadow: none;
	}
}

.root.--status-error {
	border-color: var(--rs-color-border-critical);

	&:focus-within {
		border-color: var(--rs-color-border-primary);
	}
}

@media (--rs-viewport-s) and (hover: none) {
	.input {
		font-size: var(--rs-font-size-body-2) !important;
	}
}





