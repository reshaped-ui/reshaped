@property --rs-tabs-mid-l {
	syntax: "<length>";
	initial-value: -24px;
	inherits: false;
}

@property --rs-tabs-stop-l {
	syntax: "<length>";
	initial-value: 0;
	inherits: false;
}

@property --rs-tabs-stop-r {
	syntax: "<length-percentage>";
	initial-value: 100%;
	inherits: false;
}

@property --rs-tabs-mid-r {
	syntax: "<length-percentage>";
	initial-value: calc(100% + 24px);
	inherits: false;
}

.root {
	position: relative;
	isolation: isolate;
	box-sizing: initial;

	/* 
	Make sure that tab is not stretching the flex container when is in the middle of other flex children
	Example is available in View.stories 
	*/
	max-width: 100%;
}

.list {
	--rs-tabs-gap: var(--rs-unit-x6);

	position: relative;
	gap: var(--rs-tabs-gap);
}

.inner::after {
	content: "";
	position: absolute;
	background-color: var(--rs-color-border-neutral-faded);
	z-index: 2;
}

.listItem {
	flex-shrink: 0;
	position: relative;
}

.button {
	width: 100%;

	/* 
	Keep transform working with absolute positioned elements
	Without z-index actionable goes behind them
	*/
	z-index: 1;
	position: relative;
	overflow: hidden;

	/* Highlighting causes background animation to get cut off */
	-webkit-tap-highlight-color: transparent;
	border-radius: var(--rs-radius-medium);
}

.buttonContent {
	width: 100%;
	display: flex;
	align-items: center;
	box-sizing: border-box;
	border-radius: var(--rs-radius-medium);
}

.icon {
	color: inherit;
	transition: color var(--rs-duration-fast) var(--rs-easing-standard);
}

[data-rs-keyboard] .radio:focus + .buttonContent {
	box-shadow: var(--rs-shadow-focus-inset);
}

.icon:not(:last-child) {
	margin-inline-end: var(--rs-unit-x2);
}

.item {
	color: var(--rs-color-foreground-neutral);

	@media (hover: hover) and (pointer: fine) {
		&:not(.--item-disabled, .--item-active):hover {
			color: var(--rs-color-foreground-neutral-faded);
		}
	}

	&.--item-disabled {
		color: var(--rs-color-foreground-disabled);
	}
}

.--item-active::after {
	content: "";
}

.--item-active::after,
.selector {
	position: absolute;
	border-radius: calc(var(--rs-radius-medium) - 1px);
	background: var(--rs-color-border-primary);
	z-index: var(--rs-z-index-relative);
}

.selector {
	--rs-tab-selection-x: 0;
	--rs-tab-selection-y: 0;
	--rs-tab-selection-scale-x: 0;
	--rs-tab-selection-scale-y: 0;

	transform-origin: 0 0;
	transform: translate(calc(var(--rs-tab-selection-x) * 1px), calc(var(--rs-tab-selection-y) * 1px))
		translateZ(0);
}

.--selector-hidden {
	visibility: hidden;
}

.--selector-animated {
	transition: var(--rs-duration-medium) var(--rs-easing-decelerate);
	transition-property: transform, height, width;
	will-change: transform, height, width;
}

.control {
	position: absolute;
	inset-block: 0;
	display: none;
	align-items: center;
	z-index: var(--rs-z-index-relative);
	transition: var(--rs-duration-medium) var(--rs-easing-decelerate);
	transition-property: opacity, transform;
	opacity: 0;
	pointer-events: none;

	&.control--active {
		opacity: 1;
		pointer-events: all;
	}

	[dir="rtl"] & {
		transform: scaleX(-1);
	}
}

.control--next {
	inset-inline-end: 0;
}

.control--prev {
	inset-inline-start: 0;
}

.panel {
	outline: none;
}

[data-rs-keyboard] .panel:focus {
	box-shadow: var(--rs-shadow-focus);
}

.--panel-hidden {
	display: none;
}

.--scrollable {
	& .inner {
		overflow: auto;
		/* stylelint-disable-next-line declaration-block-no-duplicate-properties */
		overflow: -moz-scrollbars-none;
		scrollbar-width: none;
		-ms-overflow-style: none;
		mask-image: linear-gradient(
			to right,
			rgba(0, 0, 0, 0%) 0%,
			rgba(0, 0, 0, 0%) var(--rs-tabs-mid-l),
			rgba(0, 0, 0, 100%) var(--rs-tabs-stop-l),
			rgba(0, 0, 0, 100%) var(--rs-tabs-stop-r),
			rgba(0, 0, 0, 0%) var(--rs-tabs-mid-r),
			rgba(0, 0, 0, 0%) 100%
		);
		transition: var(--rs-duration-medium) var(--rs-easing-decelerate);
		transition-property: --rs-tabs-stop-l, --rs-tabs-stop-r, --rs-tabs-mid-l, --rs-tabs-mid-r;

		&::-webkit-scrollbar {
			display: none;
		}
	}
}

.--direction-row {
	& .inner {
		white-space: nowrap;
	}

	& .inner::after {
		height: 1px;
		bottom: 0;
		inset-inline: 0;
	}

	& .list {
		display: inline-flex;
		vertical-align: top;
		flex-wrap: nowrap;
		align-items: center;
	}

	& .--item-active::after {
		inset-inline: 0;
		height: 2px;
		bottom: 0;
	}

	& .selector {
		left: 0;
		height: 2px;
		bottom: 0;
		width: calc(var(--rs-tab-selection-scale-x) * 1px);
	}

	& .button {
		margin: var(--rs-unit-x1) calc(var(--rs-unit-x2) * -1);
		padding: 0 var(--rs-unit-x2);
		box-sizing: initial;
	}

	& .buttonContent {
		justify-content: center;
		padding: var(--rs-tabs-item-p-v) 0;
	}
}

.--direction-column {
	& .inner::after {
		inset-inline-end: 0;
		inset-block: 0;
		height: 100%;
		width: 1px;
	}

	& .list {
		--rs-tabs-gap: var(--rs-unit-x1);

		display: flex;
		flex-direction: column;
	}

	& .item {
		padding-inline-end: var(--rs-unit-x1);
	}

	& .--item-active::after {
		bottom: 0;
	}

	& .--item-active::after,
	& .selector {
		width: 2px;
		height: 100%;
		inset-inline-end: 0;
	}

	& .selector {
		top: 0;
		height: calc(var(--rs-tab-selection-scale-y) * 1px);
	}

	& .button {
		padding: var(--rs-unit-x2);
		margin-inline-start: calc(var(--rs-unit-x2) * -1);
		width: calc(100% + var(--rs-unit-x1));
	}

	& .buttonContent {
		justify-content: flex-start;
	}
}

.--variant-borderless .inner::after,
.--variant-pills .inner::after,
.--variant-pills-elevated .inner::after {
	content: none;
}

.--variant-pills .button,
.--variant-pills-elevated .button {
	margin: 0;
	padding: 0;
}

.--variant-pills .buttonContent,
.--variant-pills-elevated .buttonContent {
	margin: 0;
	padding: var(--rs-tabs-item-p-v) var(--rs-tabs-item-p-h);

	@media (hover: hover) and (pointer: fine) {
		&:hover {
			background: none;
		}
	}
}

.--variant-pills-elevated .buttonContent {
	padding: calc(var(--rs-tabs-item-p-v) - var(--rs-unit-x1) / 2) var(--rs-tabs-item-p-h);
}

.--variant-pills .list,
.--variant-pills-elevated .list {
	--rs-tabs-gap: var(--rs-unit-x1);
}

.--variant-pills .selector,
.--variant-pills-elevated .selector {
	background-color: var(--rs-color-background-neutral);
	opacity: 0.6;
	z-index: 0;
	width: calc(var(--rs-tab-selection-scale-x) * 1px);
	height: calc(var(--rs-tab-selection-scale-y) * 1px);

	.--direction-column& {
		left: 0;
	}

	.--direction-row& {
		top: 0;
	}
}

.--variant-pills .--item-active::after,
.--variant-pills-elevated .--item-active::after {
	background-color: var(--rs-color-background-neutral);
	opacity: 0.6;
	z-index: 0;

	.--direction-column& {
		width: 100%;
	}

	.--direction-row& {
		height: 100%;
	}
}

.--variant-pills-elevated .list {
	border-radius: var(--rs-radius-medium);
	background: var(--rs-color-background-neutral-faded);
	border: 2px solid transparent;
}

.--variant-pills-elevated .--item-active::after,
.--variant-pills-elevated .selector {
	opacity: 1;
	background: var(--rs-color-background-elevation-raised);
	box-shadow: var(--rs-shadow-raised);
	box-sizing: border-box;
}

.--size-medium {
	--rs-tabs-item-p-v: var(--rs-unit-x2);
	--rs-tabs-item-p-h: var(--rs-unit-x3);
}

.--size-large {
	--rs-tabs-item-p-v: var(--rs-unit-x3);
	--rs-tabs-item-p-h: var(--rs-unit-x4);
}

.--item-width-equal {
	max-width: none;

	& .inner {
		flex-wrap: wrap;
	}

	& .list {
		display: flex;
	}

	& .listItem {
		flex-grow: 1;
		flex-basis: 0;
		margin: 0;
		overflow: hidden;
	}

	& .buttonText {
		overflow: hidden;
		text-overflow: ellipsis;
	}
}

[dir="rtl"] .--fade-start .inner,
.--fade-end .inner {
	--rs-tabs-mid-r: 100%;
	--rs-tabs-stop-r: calc(100% - var(--rs-unit-x1) * 10);
}

[dir="rtl"] .--fade-end .inner,
.--fade-start .inner {
	--rs-tabs-mid-l: 0px;
	--rs-tabs-stop-l: calc(var(--rs-unit-x1) * 10);
}

@media (pointer: fine) {
	.control {
		display: flex;
	}

	[dir="rtl"] .--fade-start .inner,
	.--fade-end .inner {
		--rs-tabs-mid-r: calc(100% - var(--rs-unit-x1) * 4);
		--rs-tabs-stop-r: calc(100% - var(--rs-unit-x1) * 10);
	}

	[dir="rtl"] .--fade-end .inner,
	.--fade-start .inner {
		--rs-tabs-mid-l: calc(var(--rs-unit-x1) * 4);
		--rs-tabs-stop-l: calc(var(--rs-unit-x1) * 10);
	}
}
